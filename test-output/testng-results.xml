<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-19T10:37:49 AEST" name="Regression" finished-at="2025-01-19T10:38:16 AEST" duration-ms="27059">
    <groups>
    </groups>
    <test started-at="2025-01-19T10:37:49 AEST" name="HappyScenarios" finished-at="2025-01-19T10:38:16 AEST" duration-ms="27059">
      <class name="tests.HomePageTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:37:49 AEST" name="setup" finished-at="2025-01-19T10:38:12 AEST" duration-ms="22648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchTest(java.lang.String)[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:38:12 AEST" name="searchTest" data-provider="getProductData" finished-at="2025-01-19T10:38:13 AEST" duration-ms="1179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Macbook]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method signature="searchTest(java.lang.String)[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:38:13 AEST" name="searchTest" data-provider="getProductData" finished-at="2025-01-19T10:38:14 AEST" duration-ms="535" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[iMac]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method signature="searchTest(java.lang.String)[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:38:14 AEST" name="searchTest" data-provider="getProductData" finished-at="2025-01-19T10:38:15 AEST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Samsung]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method signature="validateTitle()[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:38:15 AEST" name="validateTitle" finished-at="2025-01-19T10:38:15 AEST" duration-ms="63" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Search - Samsung] but found [test]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Search - Samsung] but found [test]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at tests.HomePageTest.validateTitle(HomePageTest.java:15)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTitle -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.HomePageTest@4562e04d]" started-at="2025-01-19T10:38:15 AEST" name="teardown" finished-at="2025-01-19T10:38:16 AEST" duration-ms="538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.HomePageTest -->
    </test> <!-- HappyScenarios -->
    <test started-at="2025-01-19T10:37:49 AEST" name="HappyLoginScenarios" finished-at="2025-01-19T10:38:15 AEST" duration-ms="26072">
      <class name="tests.LoginSucess">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginSucess@327514f]" started-at="2025-01-19T10:37:49 AEST" name="setup" finished-at="2025-01-19T10:38:12 AEST" duration-ms="22815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginUser_Passed()[pri:0, instance:tests.LoginSucess@327514f]" started-at="2025-01-19T10:38:12 AEST" name="loginUser_Passed" finished-at="2025-01-19T10:38:14 AEST" duration-ms="1974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser_Passed -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.LoginSucess@327514f]" started-at="2025-01-19T10:38:14 AEST" name="teardown" finished-at="2025-01-19T10:38:15 AEST" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.LoginSucess -->
    </test> <!-- HappyLoginScenarios -->
  </suite> <!-- Regression -->
</testng-results>
